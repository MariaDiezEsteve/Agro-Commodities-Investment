{"version":3,"file":"js/406.04a85c72.js","mappings":"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","sources":["webpack://agro-commodities-investment/./src/components/Buttons/SelectProdButton.vue","webpack://agro-commodities-investment/./src/components/Buttons/SelectProdButton.vue?0246","webpack://agro-commodities-investment/./src/components/Charts/InteractChart.vue","webpack://agro-commodities-investment/./src/components/Charts/InteractChart.vue?6572"],"sourcesContent":["<template>\n\n  <ul class=\"d-flex flex-column\">\n    <li\n      class=\"d-flex flex-row justify-content-start\"\n      v-for=\"(but, prop, index) in buts\"\n      :key=\"but\"\n      @click=\"getButtonSelected(index)\"\n    >\n      <label class=\"off d-flex flex-row aling-items-center\" :for=\"index\">\n        <img :src=\"images[index]\" style=\"margin-top: 0.3rem;\" />\n        <p style=\" width: 3rem;margin-right: 1.3rem; margin-top: 0.3rem;\">{{ prop }}</p> \n        <input\n          style=\"width: 1rem\"\n          :id=\"index\"\n          type=\"checkbox\"\n          checked\n        />\n      </label>\n    </li>\n  </ul>\n</template>\n\n<script setup>\nimport { ref, defineEmits} from \"vue\";\n\nlet prod = ref(\"wheat\");\nlet buts = {\n  wheat: ref(true),\n  sugar: ref(true),\n  cotton: ref(true),\n  coffee: ref(true),\n  corn: ref(true),\n};\n\nlet images = [\n  require(\"@/assets/images/IconosUserView/trigoBlanco-removebg-preview.png\"),\n  require(\"@/assets/images/IconosUserView/azucarBlanco-removebg-preview.png\"),\n  require(\"@/assets/images/IconosUserView/algodonCapBlanco-removebg-preview.png\"),\n  require(\"@/assets/images/IconosUserView/cafeBlanco-removebg-preview.png\"),\n  require(\"@/assets/images/IconosUserView/maizBlanco-removebg-preview.png\"),\n];\n\n const emit = defineEmits([\"buttonSelected\"])\n \n\nlet getButtonSelected = (index) => {\n  prod.value = Object.keys(buts)[index];\n\n  if (buts[prod.value].value == false) {\n    buts[prod.value].value = true;\n  } else {\n    buts[prod.value].value = false;\n  }\n  emit(\"buttonSelected\",index) \n \n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"@/assets/Sass/--parcial.scss\";\n\n.off {\n  @include button($bg-color: $blueDark, $wth: 10rem, $colorletra: $white_color);\n  display: flex;\n  margin-left: 3rem;\n  margin-top: 1.8rem;\n  margin-bottom: 1.8rem;\n}\n\nh1 {\n  margin-left: 3rem;\n}\n\nimg {\n  height: 2rem;\n  align-self: start;\n  display: flex;\n  flex-direction: row;\n  padding-right: 1rem;\n  padding-left: 1rem;\n}\n</style>\n","import script from \"./SelectProdButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SelectProdButton.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SelectProdButton.vue?vue&type=style&index=0&id=2be1bdee&lang=scss&scoped=true\"\n\nimport exportComponent from \"/home/penascalf5/Agro-Commodities-Investment/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2be1bdee\"]])\n\nexport default __exports__","<template>\n  <div class=\"d-flex flex-row justify-content-left\">\n    <SelectProdButton v-if=\"vista != 'home'\" style=\"width:30%\" @buttonSelected=\"getButtonSelected\"/>\n    <div :class=\"classChart\">\n      <div class=\"d-flex flex-row justify-content-left\">\n        <DropDate class=\"mx-4\" @dateSelected=\"getDate\"/>\n        <DropChart @typeSelected=\"getTypeChar\"/>\n      </div>\n      <div v-if=\"date=='years'\">\n        <CardDate class=\"mx-3\" @rangeYears=\"rangeYears\"/>\n      </div>\n      <div v-else>\n        <CardYearOfMonths @yearOfMonths=\"getYear\" />\n      </div>\n      <canvas id=\"myChart\"></canvas>\n    </div>\n  </div>\n    \n</template>\n  \n<script setup>\n  import {defineProps,onMounted, ref, computed} from 'vue';\n  import Chart from 'chart.js/auto'; //npm install chart.js\n  import DropDate from '@/components/Buttons/DropDate.vue'\n  import DropChart from '@/components/Buttons/DropChart.vue'\n  import CardDate from '@/components/Cards/CardDate.vue'\n  import CardYearOfMonths from '@/components/Cards/CardYearOfMonths.vue'\n  import SelectProdButton from \"@/components/Buttons/SelectProdButton.vue\";\n\n  let buts = {\n    wheat: ref(true),\n    sugar: ref(true),\n    cotton: ref(true),\n    coffee: ref(true),\n    corn: ref(true),\n  };\n  \n\n  const prop= defineProps({\n    data: Object,\n    vista: String\n  })\n\n\n  const date = ref(\"years\")\n  const getDate = (selectedDate) => {\n    date.value = selectedDate\n    interactChart()    \n  }\n\n \n\n  const typeChart = ref(\"bar\")\n  const getTypeChar = (selectedType) => {\n    typeChart.value = selectedType\n    interactChart()\n  }\n\n  const yearOfMonths = ref(2022)\n  const getYear = (year) => {\n    yearOfMonths.value = year\n    interactChart()    \n  }\n\n  let rangeYear = ref([2016, 2017, 2018, 2019, 2020,2021, 2022])\n  let rangeYears = (years) => {\n    rangeYear.value = years\n    interactChart()\n  }\n \n  let prod = ref(\"sugar\");\n  const getButtonSelected = (index) =>{\n    prod.value = Object.keys(buts)[index];\n    if (buts[prod.value].value == false) {\n      buts[prod.value].value = true;\n    } else {\n      buts[prod.value].value = false;\n    }\n    interactChart()\n  }\n\n\n\n\n\n  onMounted(()=>{\n    interactChart()\n  });\n\n\n  let interactChart = () => { \n\n      let myChart;\n      const ctx = document.getElementById('myChart')\n      const  months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n      createDataChart()\n      const data = {\n        labels: date.value === \"months\" ? months : rangeYear.value,\n        datasets:dataChart\n      }\n    const chartWithKey = Chart.getChart('myChart')\n    if (chartWithKey != undefined) {\n      chartWithKey.destroy()\n    }\n    myChart = new Chart(ctx, {\n      type:typeChart.value,\n      data: data,\n    })\n\n    return myChart\n  }\n  let dataChart = ref([])\n  function createDataChart(){\n    dataChart = []\n    for ( let key in buts) {\n      if(buts[key].value == true){\n        let prodData = crateSpecificData(key)\n        // eslint-disable-next-line\n        dataChart.push(prodData)\n      }\n    }\n  }\n  function crateSpecificData(key){\n    const productData = {\n          label: key +\" \"+'Price',\n          data: date.value === \"months\" ? pricesPerMonthInAYear(yearOfMonths.value,key) : averagePricesByYearRange (rangeYear.value[0],rangeYear.value[(rangeYear.value).length-1], key),\n          fill: typeChart.value == \"bar\" ? true : false, \n          borderColor: getColor(key), \n          backgroundColor: getColor(key),\n          tension: 0,\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n          }\n    }\n\n    return productData\n\n  }\n\n\n  let pricesPerMonthInAYear = (year,key)=>{\n    \n    let productData = prop.data.prodts[key].data \n    productData = productData.filter(element => parseInt((element.date).slice(0,4)) == year)\n    productData = productData.map(element =>  parseFloat((element.value)).toFixed(2))\n    return productData\n  }\n  \n  let averagePricesByYearRange = (year1,year2, key)=>{\n    \n    let productData = prop.data.prodts[key].data \n  \n    let sum=0,productDataYear=[], prices=[], avgs =[]\n    while (year1<(year2+1)) {\n      productDataYear = productData.filter(element => parseInt((element.date).slice(0,4)) == year1)  \n      prices = productDataYear.map(element =>  parseFloat((element.value)).toFixed(2))\n      sum = 0\n      for( let i=0; i<prices.length ; i++){\n        sum = sum + parseFloat(prices[i])\n      } \n      avgs.push(sum/prices.length)\n      year1++\n    }\n    return avgs\n  }\n\n  const getColor = (name) => {\n    let color = \"rgba(0,0,0,1)\"\n    switch(name) {\n        case (\"wheat\"):\n            color = \"rgba(248, 238, 11, 1)\";\n            break;\n        case (\"corn\"):\n            color = \"rgba(252, 90, 90, 1)\";\n            break;\n        case (\"cotton\"):\n            color = \"rgba(1, 1, 88, 1)\";\n            break;\n        case (\"sugar\"):\n            color = \"rgba(27, 169, 234, 1)\";\n            break;\n        case (\"coffee\"):\n            color = \"rgba(61, 213, 152, 1)\";\n            break;\n        default:\n            break;\n    }\n\n    return color\n  }\n\n  const classChart = computed(() => {\n      let result = 'chart65';\n      if (prop.vista === \"home\") {\n          result = 'chart90';\n      } \n      return result;\n    });\n  \n</script>\n  \n<style lang=\"scss\" scoped>\n  @import \"@/assets/Sass/--parcial.scss\";\n\n  .chart90{\n    width: 90%;\n  }\n  .chart65{\n    width: 65%;\n  }\n\n\n</style>\n","import script from \"./InteractChart.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./InteractChart.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./InteractChart.vue?vue&type=style&index=0&id=637f9bec&lang=scss&scoped=true\"\n\nimport exportComponent from \"/home/penascalf5/Agro-Commodities-Investment/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-637f9bec\"]])\n\nexport default __exports__"],"names":["prod","ref","buts","wheat","sugar","cotton","coffee","corn","images","require","getButtonSelected","index","value","Object","keys","emit","__exports__","date","getDate","selectedDate","interactChart","typeChart","getTypeChar","selectedType","yearOfMonths","getYear","year","rangeYear","rangeYears","years","onMounted","myChart","ctx","document","getElementById","months","createDataChart","data","labels","datasets","dataChart","chartWithKey","Chart","undefined","destroy","type","key","prodData","crateSpecificData","push","productData","label","pricesPerMonthInAYear","averagePricesByYearRange","length","fill","borderColor","getColor","backgroundColor","tension","options","responsive","maintainAspectRatio","prop","prodts","filter","element","parseInt","slice","map","parseFloat","toFixed","year1","year2","sum","productDataYear","prices","avgs","i","name","color","classChart","computed","result","vista"],"sourceRoot":""}