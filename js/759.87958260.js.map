{"version":3,"file":"js/759.87958260.js","mappings":"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","sources":["webpack://agro-commodities-investment/./src/components/Cards/CardDetailsProduct.vue","webpack://agro-commodities-investment/./src/components/Cards/CardDetailsProduct.vue?a9f5","webpack://agro-commodities-investment/./src/components/Charts/PieChart.vue","webpack://agro-commodities-investment/./src/components/Charts/PieChart.vue?db09","webpack://agro-commodities-investment/./src/components/Charts/BarChart.vue","webpack://agro-commodities-investment/./src/components/Charts/BarChart.vue?6a7b","webpack://agro-commodities-investment/./src/views/DetailsView.vue","webpack://agro-commodities-investment/./src/views/DetailsView.vue?372f"],"sourcesContent":["<template> \n<div class=\"row justify-content-center\">\n  <div v-for=\"prodt in data.prodts\" :key=\"prodt.name\" class=\"flex card m2\">\n    <div class=\"col card-body\" @click=\"getNameProduct((prodt.name).slice(16))\">\n      {{ calculateRate(prodt) }}  <!-- Llamada a la función: Esto hace referencia a la función del cálculo rate para poder obtener los datos y mostrarlos en la línea 10-->\n      {{ nameProduct(prodt) }}\n      {{ calculateName(prodt) }}\n      <h4 :class=\"classColorProduct\">{{ nameColorProduct}}</h4>\n      <div class=\"card-details\">\n        <p class=\"card-text\"> ${{ name }}</p>\n        <p :class='classRate'> {{ rate }}% </p>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n  </template>\n  \n  <script setup>\n    import {defineProps, defineEmits, ref} from 'vue';\n    import { computed } from \"@vue/reactivity\"\n\n\n  defineProps({\n      data: Object\n    })\n\n    const rate = ref (0) \n    const name = ref(\"\")\n\n    function calculateRate(prodt){\n      rate.value = parseFloat(((prodt.data[0].value)-(prodt.data[1].value)) / (prodt.data[1].value)).toFixed(3)\n    }\n  \n     function calculateName(prodt){\n       name.value = parseFloat(prodt.data[0].value).toFixed(2)\n     }\n\n    \n    const classRate = computed(() => {\n      let result = '';\n      if (rate.value === 0) {\n          result = 'zero';\n      } else if (rate.value > 0) {\n          result = 'positive';\n      } else {\n          result = 'negative';\n      }\n      return result;\n    });\n\n    const nameColorProduct = ref(\"\");\n    function nameProduct(prodt) {\n      nameColorProduct.value = (prodt.name).slice(16);\n    }\n\n    const classColorProduct = computed(() => {\n      let colorProduct = '';\n      if (nameColorProduct.value == \"Wheat\") {\n          colorProduct = 'yellow card-title';\n      } else if (nameColorProduct.value == \"Sugar\") {\n          colorProduct = 'lightblue card-title';\n      } else if (nameColorProduct.value == \"Cotton\") {\n          colorProduct = 'darkblue card-title';\n      }else if (nameColorProduct.value == \"Coffee\") {\n          colorProduct = 'lightgreen card-title';\n      }else if(nameColorProduct.value == \"Corn\") {\n          colorProduct = 'coral card-title';\n      } else {\n        colorProduct = 'black card-title'\n      }\n      return colorProduct;\n    });\n\n    //To get the information about name of product to send to the parent\n    const emit = defineEmits([\"nameOfProduct\"])\n\n    const getNameProduct = (name) => {\n          emit(\"nameOfProduct\", name)  \n    }\n  \n\n  </script>\n\n  <style lang=\"scss\" scoped>\n    @import \"@/assets/Sass/--parcial.scss\";\n\n\n  .card-details {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .card {\n    width:12rem;\n    padding: 0.8rem;\n    margin: 0.5rem;\n  }\n\n  .card-title {\n    padding-bottom: 1rem;\n    text-align: center; \n  }\n\n  // Size of the numbers in cards\n  .card-text {\n    font-size: 1rem;\n  }\n\n  .positive {\n    color: $green;\n    font-size: 1rem;\n  }\n    \n  .positive::after {\n    content: \"\\21E1\";\n    font-size: 1rem;\n  }\n\n  .negative {\n  color:$red;\n  font-size: 1rem;\n  }\n\n  .negative::after {\n    content: \"\\21E3\";\n    font-size: 1rem;\n  }\n\n  .zero {\n  color: $blueDark;\n  }\n\n  h4 {\n    font-size: 1.5rem;\n    font-weight: 600;\n  }\n\n  //Color Name Products\n\n  .yellow {\n    color: $wheat;\n  }\n\n  .lightblue {\n    color: $sugar;\n  }\n\n  .darkblue {\n    color: $cotton;\n  }\n\n  .lightgreen {\n    color: $coffee;\n  }\n\n  .coral {\n    color: $corn;\n  }\n\n  \n  </style>\n","import script from \"./CardDetailsProduct.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CardDetailsProduct.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./CardDetailsProduct.vue?vue&type=style&index=0&id=6f4891de&lang=scss&scoped=true\"\n\nimport exportComponent from \"/home/penascalf5/Agro-Commodities-Investment/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6f4891de\"]])\n\nexport default __exports__","<template>\n  <div class=\"pieChartDiv\">\n    <canvas id=\"myPieChart\"></canvas>  \n  </div>\n </template>\n  \n\n\n  <script setup>\n\n  import {onMounted,defineProps} from 'vue';\n  import Chart from 'chart.js/auto'; //npm install chart.js\n\n  defineProps({\n      data: Object\n  })\n\n\n  // onMounted(()=>{//muy importante el onMounted para coger cosas del template es aqui dentro\n  //   //myChart\n  //   pieChart()\n  // });\n\n\n\n  // let pieChart = () => { \n   \n  //   let myChart;\n  //   const ctx = document.getElementById('myPieChart')\n  //   const commodities = [\"Wheat\", \"Sugar\", \"Cotton\", \"Coffee\",\"Corn\"]\n      \n  //   const dataChart = {\n  //     labels:commodities,\n  //     datasets: [{\n  //       label:'%',  \n  //       data: [10, 20, 25, 5, 40],\n  //       fill: true, //\n  //       borderColor: [\"rgba(248, 238, 11, 1)\",\"rgba(27, 169, 234, 1)\",\"rgba(1, 1, 88, 1)\",\"rgba(61, 213, 152, 1)\",\"rgba(252, 90, 90, 1)\"], \n  //       backgroundColor: [\"rgba(248, 238, 11, 1)\",\"rgba(27, 169, 234, 1)\",\"rgba(1, 1, 88, 1)\",\"rgba(61, 213, 152, 1)\",\"rgba(252, 90, 90, 1)\"], \n  //       tension: 0,\n  //       options: {\n  //         responsive: true,\n  //         maintainAspectRatio: false, \n\n  //       }\n  //     }\n  //   ]\n  //   }\n  //   const chartWithKey = Chart.getChart('myChart')\n  //   if (chartWithKey != undefined) {\n  //     chartWithKey.destroy()\n  //   }\n  //   myChart = new Chart(ctx, {\n  //     type: \"doughnut\",\n  //     data: dataChart,\n\n  //   })\n\n  //   return myChart\n  // }\n\n  onMounted(()=>{\n    \n   const myChart = new Chart (\n      document.getElementById('myPieChart'),\n      config\n\n    );\n    console.log(myChart);\n  });\n\n\n \n\n\n   \n    const labels = [\"Wheat\", \"Sugar\", \"Cotton\", \"Coffee\",\"Corn\"]\n     \n    const data = {\n      labels: labels,\n      datasets: [{\n        label:'%',  \n        data: [10, 20, 25, 5, 40],\n        fill: true, \n        borderColor: [\"rgba(248, 238, 11, 1)\",\"rgba(27, 169, 234, 1)\",\"rgba(1, 1, 88, 1)\",\"rgba(61, 213, 152, 1)\",\"rgba(252, 90, 90, 1)\"],\n        backgroundColor: [\"rgba(248, 238, 11, 1)\",\"rgba(27, 169, 234, 1)\",\"rgba(1, 1, 88, 1)\",\"rgba(61, 213, 152, 1)\",\"rgba(252, 90, 90, 1)\"],\n        }]\n   };\n\n\n\n\n\n\n      const config = {\n        type: \"doughnut\",\n        data: data,\n         options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            tooltip: {\n              enabled: true,\n              boxPadding: 3,\n              callbacks: {\n                label: (context) => {\n                  return `${context.parsed}%`\n                }\n              }\n            },\n            legend: {\n              labels: {\n                boxWidth: 5,\n                usePointStyle: true,\n                boxHeight: 5.5,\n                font: {\n                  size: 12,\n                }\n              }     \n            }\n          }\n\n          }\n      }\n\n\n\n</script>\n  \n  <style lang=\"scss\" scoped>\n    @import \"@/assets/Sass/--parcial.scss\";\n\n    .pieChartDiv {\n      width: 35%;\n    }\n\n    @include media-breakpoint-down(sm) {\n\n    .pieChartDiv {\n      width: 85%;\n    }\n}\n    @include media-breakpoint-down(lg) {\n        .pieChartDiv {\n          width: 110%;\n          margin-bottom: 2rem;\n        }\n\n    }\n\n  </style>","import script from \"./PieChart.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PieChart.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PieChart.vue?vue&type=style&index=0&id=6b07ac24&lang=scss&scoped=true\"\n\nimport exportComponent from \"/home/penascalf5/Agro-Commodities-Investment/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6b07ac24\"]])\n\nexport default __exports__","<template class=\"backgroundDiv\">\n  <CardDetailsProduct :data = \"data\" @nameOfProduct=\"getNameProduct\"/>\n\n  <div class=\"d-flex justify-content-center pt-4 mt-5\">\n    <div style=\"width: 90%\">\n      <div class=\"graphicDropsDiv d-flex flex-row justify-content-left\">\n        <DropDate class=\"mx-4\" @dateSelected=\"getDate\"/>\n        <DropChart @typeSelected=\"getTypeChar\"/>\n      </div>\n      <div v-if=\"date=='years'\">\n        <CardDate class=\"mx-3 \" @rangeYears=\"rangeYears\"/>\n      </div>\n      <div v-else>\n        <CardYearOfMonths @yearOfMonths=\"getYear\" />\n      </div>\n      <div class=\"graphicsDiv d-flex justify-content-around gap-4 align-items-center\">\n        <div class=\"barChartDiv\">\n          <canvas id=\"myChart\"></canvas>\n        </div>\n      \n        <PieChart :data = \"data\" />\n\n    </div>\n\n    </div>\n\n  </div>\n</template>\n  \n<script setup>\n\n  import {defineProps, ref, onMounted} from 'vue';\n  import Chart from 'chart.js/auto'; //npm install chart.js\n  import DropDate from '@/components/Buttons/DropDate.vue'\n  import DropChart from '@/components/Buttons/DropChart.vue'\n  import CardDate from '@/components/Cards/CardDate.vue'\n  import CardYearOfMonths from '@/components/Cards/CardYearOfMonths.vue'\n  import CardDetailsProduct from '../Cards/CardDetailsProduct.vue'\n  import PieChart from '@/components/Charts/PieChart.vue'\n\n\n\n  const prop = defineProps({\n    data: Object\n    })\n\n\n\n  const date = ref(\"years\")\n  const getDate = (selectedDate) => {\n    date.value = selectedDate\n    productChart()    \n  }\n\n  let nameProduct = ref(\"Sugar\")\n  const getNameProduct = (name) => {\n    nameProduct.value = name\n    productChart()    \n  }\n\n  const typeChart = ref(\"bar\")\n  const getTypeChar = (selectedType) => {\n    typeChart.value = selectedType\n    productChart()\n  }\n\n  const yearOfMonths = ref(2022)\n  const getYear = (year) => {\n    yearOfMonths.value = year\n    productChart()    \n  }\n\n  let rangeYear = ref([2016, 2017, 2018, 2019, 2020,2021, 2022])\n  let rangeYears = (years) => {\n    rangeYear.value = years\n    productChart()\n\n  }\n\n  onMounted(()=>{\n    productChart() \n \n  });\n\n \n  let productChart = () => { \n\n    let myChart;\n    const ctx = document.getElementById('myChart')\n    const  months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n      \n    const dataChart = {\n      labels: date.value === \"months\" ? months : rangeYear.value,\n      datasets: [{\n        label: nameProduct.value +\" \"+'Price',\n        data: date.value === \"months\" ? pricesPerMonthInAYear(yearOfMonths.value) : averagePricesByYearRange (rangeYear.value[0],rangeYear.value[(rangeYear.value).length-1]),\n        fill: typeChart.value == \"bar\" ? true : false, \n        borderColor: getColor(nameProduct.value), \n        backgroundColor: getColor(nameProduct.value),\n        tension: 0,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n        }\n      }\n    ]\n    }\n    const chartWithKey = Chart.getChart('myChart')\n    if (chartWithKey != undefined) {\n      chartWithKey.destroy()\n    }\n    myChart = new Chart(ctx, {\n      type: typeChart.value,\n      data: dataChart,\n    })\n    return myChart\n    }\n\n  let pricesPerMonthInAYear = (year)=>{\n    let productData = searchProduct (nameProduct)\n    productData = productData.filter(element => parseInt((element.date).slice(0,4)) == year)\n    productData = productData.map(element =>  parseFloat((element.value)).toFixed(2))\n    return productData\n  }\n  \n\n\n  let averagePricesByYearRange = (year1,year2)=>{\n    \n    let productData =  searchProduct (nameProduct)\n  \n    let sum=0,productDataYear=[], prices=[], avgs =[]\n    while (year1<(year2+1)) {\n      productDataYear = productData.filter(element => parseInt((element.date).slice(0,4)) == year1)  \n      prices = productDataYear.map(element =>  parseFloat((element.value)).toFixed(2))\n      sum = 0\n      for( let i=0; i<prices.length ; i++){\n        sum = sum + parseFloat(prices[i])\n      } \n      avgs.push(sum/prices.length)\n      year1++\n    }\n    return avgs\n  }\n\n  function searchProduct (nameProduct){\n    \n    let inicial = nameProduct.value.slice(0,1)\n    inicial = inicial.toLowerCase()\n    let nameP = inicial + nameProduct.value.slice(1)\n\n    let dataProduct = 0\n\n    let keys = Object.keys(prop.data.prodts)\n    let values = Object.values(prop.data.prodts)\n    let found = false\n    let i = 0\n    while(!found && i < keys.length){\n\n      if(keys[i] == nameP){\n        dataProduct = values[i].data\n        found = true\n      }\n      else{\n        i++\n      }\n\n    }\n    return dataProduct\n  }\n\n\n  const getColor = (name) => {\n    let color = \"rgba(0,0,0,1)\"\n    switch(name) {\n        case (\"Wheat\"):\n            color = \"rgba(248, 238, 11, 1)\";\n            break;\n        case (\"Corn\"):\n            color = \"rgba(252, 90, 90, 1)\";\n            break;\n        case (\"Cotton\"):\n            color = \"rgba(1, 1, 88, 1)\";\n            break;\n        case (\"Sugar\"):\n            color = \"rgba(27, 169, 234, 1)\";\n            break;\n        case (\"Coffee\"):\n            color = \"rgba(61, 213, 152, 1)\";\n            break;\n        default:\n            break;\n    }\n\n    return color\n\n  }\n\n \n  \n</script>\n  \n<style lang=\"scss\" scoped>\n  @import \"@/assets/Sass/--parcial.scss\";\n\n  .barChartDiv {\n    width: 100%;\n\n  }\n \n  @include media-breakpoint-down(sm) {\n    .graphicDropsDiv {\n      margin-bottom: 1.5rem;\n    }\n\n  \n    .graphicsDiv {\n      direction: flex;\n      flex-wrap: wrap;\n      \n  }\n \n  .barChartDiv {\n    width: 145%;\n\n  }\n  }\n\n  @include media-breakpoint-down(lg) {\n    .graphicDropsDiv {\n      margin-bottom: 1.5rem;\n    }\n\n  \n    .graphicsDiv {\n      direction: flex;\n      flex-wrap: wrap;\n      \n  }\n \n  .barChartDiv {\n    width: 135%;\n\n  }\n\n}\n  \n</style>","import script from \"./BarChart.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BarChart.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BarChart.vue?vue&type=style&index=0&id=65e03aef&lang=scss&scoped=true\"\n\nimport exportComponent from \"/home/penascalf5/Agro-Commodities-Investment/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-65e03aef\"]])\n\nexport default __exports__","  <template>\n    <SideBar class=\"col-2\"/>\n    <div class=\"col-10 px-5\" >\n      <h1>Agro Commodities Details</h1>\n      <p>This page shows the information details about the following commodities:</p>\n      <img v-if=\"data.isError\" src=\"@/assets/images/error.jpeg\" alt=\"error\">\n      <img v-if=\"isLoading\" src=\"@/assets/images/spin.gif\" alt=\"loading\">\n      <div v-if=\"!data.isError && !isLoading\" >\n        <BarChart :data = \"data\"/> \n      </div>\n    </div>\n  </template>\n  \n  <script setup>\n  import info from '@/DataInformation/dataInfo'\n  import {ref,onMounted} from \"vue\";\n  import SideBar from '@/components/Commons/SideBar.vue'\n  import BarChart from '@/components/Charts/BarChart.vue'\n\n  \n    let isLoading = ref(true) \n    let data =  ref(onMounted(async () => {\n      data.value = await info.getData()\n      if( !data.value.isLoading){\n        isLoading.value = false\n      }\n\n    }))\n\n\n  </script>\n  \n  <style lang=\"scss\" scoped>\n    @import \"@/assets/Sass/--parcial.scss\";\n\n    // #app{\n    //   width: 100%;\n    // }\n\n    h1{\n      text-align: center;\n    }\n\n    p{\n      margin-bottom: 1rem;\n      text-align: center;\n    }\n\n    @include media-breakpoint-down(sm) {\n   h1 {\n     margin: 1rem 0.3rem;\n   }\n  }\n\n  @include media-breakpoint-down(lg) {\n   h1 {\n     margin: 1.5rem 0.3rem;\n   }\n  }\n  </style>\n\n","import script from \"./DetailsView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DetailsView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./DetailsView.vue?vue&type=style&index=0&id=292eaa28&lang=scss&scoped=true\"\n\nimport exportComponent from \"/home/penascalf5/Agro-Commodities-Investment/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-292eaa28\"]])\n\nexport default __exports__"],"names":["rate","ref","name","calculateRate","prodt","value","parseFloat","data","toFixed","calculateName","classRate","computed","result","nameColorProduct","nameProduct","slice","classColorProduct","colorProduct","getNameProduct","emit","__exports__","onMounted","myChart","Chart","document","getElementById","config","console","log","labels","datasets","label","fill","borderColor","backgroundColor","type","options","responsive","maintainAspectRatio","plugins","tooltip","enabled","boxPadding","callbacks","context","parsed","legend","boxWidth","usePointStyle","boxHeight","font","size","date","getDate","selectedDate","productChart","typeChart","getTypeChar","selectedType","yearOfMonths","getYear","year","rangeYear","rangeYears","years","ctx","months","dataChart","pricesPerMonthInAYear","averagePricesByYearRange","length","getColor","tension","chartWithKey","undefined","destroy","productData","searchProduct","filter","element","parseInt","map","year1","year2","sum","productDataYear","prices","avgs","i","push","inicial","toLowerCase","nameP","dataProduct","keys","Object","prop","prodts","values","found","color","isLoading","async","info"],"sourceRoot":""}